# Copyright 2020 Cortex Labs, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: aws-node
    rules:
      - apiGroups:
          - crd.k8s.amazonaws.com
        resources:
          - "*"
        verbs:
          - "*"
      - apiGroups: [""]
        resources:
          - pods
          - nodes
          - namespaces
        verbs: ["list", "watch", "get"]
      - apiGroups: ["extensions"]
        resources:
          - daemonsets
        verbs: ["list", "watch"]

    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: aws-node
      namespace: kube-system

    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: aws-node
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: aws-node
    subjects:
      - kind: ServiceAccount
        name: aws-node
        namespace: kube-system

    ---
    kind: DaemonSet
    apiVersion: apps/v1
    metadata:
      name: aws-node
      namespace: kube-system
      labels:
        k8s-app: aws-node
    spec:
      updateStrategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: "10%"
      selector:
        matchLabels:
          k8s-app: aws-node
      template:
        metadata:
          labels:
            k8s-app: aws-node
        spec:
          priorityClassName: system-node-critical
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: "beta.kubernetes.io/os"
                        operator: In
                        values:
                          - linux
                      - key: "beta.kubernetes.io/arch"
                        operator: In
                        values:
                          - amd64
                      - key: eks.amazonaws.com/compute-type
                        operator: NotIn
                        values:
                          - fargate
          serviceAccountName: aws-node
          hostNetwork: true
          tolerations:
            - operator: Exists
          containers:
            - image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni:v1.6.0
              imagePullPolicy: Always
              ports:
                - containerPort: 61678
                  name: metrics
              name: aws-node
              readinessProbe:
                exec:
                  command: ["/app/grpc-health-probe", "-addr=:50051"]
                initialDelaySeconds: 35
              livenessProbe:
                exec:
                  command: ["/app/grpc-health-probe", "-addr=:50051"]
                initialDelaySeconds: 35
              env:
                - name: AWS_VPC_K8S_CNI_LOGLEVEL
                  value: DEBUG
                - name: AWS_VPC_K8S_CNI_VETHPREFIX
                  value: eni
                - name: AWS_VPC_ENI_MTU
                  value: "9001"
                - name: MY_NODE_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: spec.nodeName
              resources:
                requests:
                  cpu: 10m
              securityContext:
                privileged: true
              volumeMounts:
                - mountPath: /host/opt/cni/bin
                  name: cni-bin-dir
                - mountPath: /host/etc/cni/net.d
                  name: cni-net-dir
                - mountPath: /host/var/log
                  name: log-dir
                - mountPath: /var/run/docker.sock
                  name: dockersock
                - mountPath: /var/run/dockershim.sock
                  name: dockershim
          volumes:
            - name: cni-bin-dir
              hostPath:
                path: /opt/cni/bin
            - name: cni-net-dir
              hostPath:
                path: /etc/cni/net.d
            - name: log-dir
              hostPath:
                path: /var/log
            - name: dockersock
              hostPath:
                path: /var/run/docker.sock
            - name: dockershim
              hostPath:
                path: /var/run/dockershim.sock

    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      name: eniconfigs.crd.k8s.amazonaws.com
    spec:
      scope: Cluster
      group: crd.k8s.amazonaws.com
      versions:
        - name: v1alpha1
          served: true
          storage: true
      names:
        plural: eniconfigs
        singular: eniconfig
        kind: ENIConfig
